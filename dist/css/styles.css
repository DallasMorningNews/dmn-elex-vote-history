#chart{position:relative;font-family:"Gotham A","Gotham B",arial,sans-serif !important}#chart h3{margin-top:0;font-size:24px;margin-bottom:-25px}#chart p.footnote{font-size:12px;margin:0 0 5px;color:grey}#chart p.footnote span.stdev-key{display:inline-block;width:15px;border-radius:2px;height:12px;opacity:0.3;margin-bottom:-3px}#chart p.footnote span.stdev-key.rep{background-color:#D83E34}#chart p.footnote span.stdev-key.dem{background-color:#5298E6}#chart div.trendLab{display:inline-block;position:absolute;top:33px;font-size:11px;left:2px}#chart div.trendLab span{color:white;padding:1px 3px;border-radius:1px;font-weight:bold}#chart div.trendLab span.rep{background-color:#D83E34}#chart div.trendLab span.dem{background-color:#5298E6}#chart path.stdev.dem{fill:#5298E6;opacity:0.2}#chart path.stdev.rep{fill:#D83E34;opacity:0.2}#chart path.line{stroke-width:4px;fill:none}#chart path.line.rep{stroke:#D83E34}#chart path.line.dem{stroke:#5298E6}#chart .axis path{display:none}#chart .axis text{font-size:13px;fill:grey}#chart .axis text.label{font-style:italic;font-size:12px;transform:translate(0, 0)}#chart .axis.x line{display:none}#chart .axis.y text{text-anchor:start;transform:translate(0px, -10px)}#chart .axis.y line{stroke:#C7C7C7;stroke-dasharray:3px 3px}#chart circle.uncontestedR{fill:rgba(255,0,0,0.1);stroke:rgba(255,0,0,0.2);stroke-width:1px}#chart circle.uncontestedD{fill:rgba(0,0,255,0.1);stroke:rgba(0,0,255,0.2);stroke-width:1px}#chart{border:1px dashed red;width:50%;max-width:600px;height:400px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJfY2hhcnQtc3R5bGVzLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAndmFyaWFibGVzJztcbkBpbXBvcnQgJ2NoYXJ0LXN0eWxlcyc7XG5cbiN7JFZvdGVIaXN0b3J5LWNvbnRhaW5lcn0ge1xuICBib3JkZXI6IDFweCBkYXNoZWQgcmVkO1xuICB3aWR0aDogNTAlO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBoZWlnaHQ6NDAwcHg7XG59XG4iLCIkVm90ZUhpc3RvcnktY29udGFpbmVyOiAnI2NoYXJ0JztcblxuXG4vLyBVbml2ZXJzYWwgdmFyaWFibGVzLlxuJGVsZXgtcmVkOiAjRjA0QTQwO1xuXG4vLyBFeGFtcGxlOlxuJGJyYW5kLXByaW1hcnk6ICMwMTg1ZDM7XG4kYnJhbmQtc3VjY2VzczogIzU3QUQ1ODtcbiRzdGF0ZS1zdWNjZXNzLXRleHQ6ICRicmFuZC1zdWNjZXNzO1xuJGdyZXktbWFqb3I6IzVENUQ1RDtcbiRncmV5LW1pbm9yOiNDN0M3Qzc7XG4kZ3JleS1zaGFkb3c6I0VFRUVFRTtcblxuJGNoYXJ0R3JleTogIzgwODA4MDtcbiR0b29FYXJseUxhYmVsR3JleTogI0E5QTlBOTtcbiRjaG9yb3BsZXRoTGluZVN0cm9rZUNvbG9yOiAjREREREREO1xuJHJlcHVibGljYW46ICNFMzRFMzY7XG4kZGVtb2NyYXQ6ICM0ODk1RDA7XG5cbiRidG4tcHJpbWFyeS1iZzogJGdyZXktbWlub3I7XG4kYnRuLWJvcmRlci1yYWRpdXMtbGFyZ2U6IDJweDtcbiRidG4tYm9yZGVyLXJhZGl1cy1iYXNlOiAycHg7XG4kYnRuLXByaW1hcnktY29sb3I6ICRncmV5LW1ham9yO1xuJGJ0bi1mb250LXdlaWdodDogYm9sZDtcbiRidG4tcHJpbWFyeS1ib3JkZXI6IHRyYW5zcGFyZW50O1xuXG4kZGVtb2NyYXQ6ICM1Mjk4RTY7XG4kcmVwdWJsaWNhbjogI0Q4M0UzNDtcblxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdHb3RoYW0gQScsICdHb3RoYW0gQicsIGFyaWFsLCBzYW5zLXNlcmlmO1xuIiwiI3skVm90ZUhpc3RvcnktY29udGFpbmVyfSB7XG5cbiAgcG9zaXRpb246cmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktc2Fucy1zZXJpZiAhaW1wb3J0YW50O1xuXG4gIGgze1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IC0yNXB4O1xuICB9XG5cbiAgcC5mb290bm90ZXtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbWFyZ2luOjAgMCA1cHg7XG4gICAgY29sb3I6Z3JleTtcbiAgICBzcGFuLnN0ZGV2LWtleXtcbiAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6MTVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgIGhlaWdodDoxMnB4O1xuICAgICAgb3BhY2l0eTogMC4zO1xuICAgICAgbWFyZ2luLWJvdHRvbTotM3B4O1xuICAgICAgJi5yZXB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRyZXB1YmxpY2FuO1xuICAgICAgfVxuICAgICAgJi5kZW17XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZW1vY3JhdDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBkaXYudHJlbmRMYWJ7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgdG9wOjMzcHg7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGxlZnQ6MnB4O1xuICAgIHNwYW57XG4gICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgIHBhZGRpbmc6MXB4IDNweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgJi5yZXB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRyZXB1YmxpY2FuO1xuICAgICAgfVxuICAgICAgJi5kZW17XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZW1vY3JhdDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwYXRoLnN0ZGV2LmRlbXtcbiAgICBmaWxsOiAkZGVtb2NyYXQ7XG4gICAgb3BhY2l0eTogMC4yO1xuICB9XG4gIHBhdGguc3RkZXYucmVwe1xuICAgIGZpbGw6ICRyZXB1YmxpY2FuO1xuICAgIG9wYWNpdHk6IDAuMjtcbiAgfVxuICBwYXRoLmxpbmV7XG4gICAgc3Ryb2tlLXdpZHRoOjRweDtcbiAgICBmaWxsOm5vbmU7XG4gICAgJi5yZXB7XG4gICAgICBzdHJva2U6JHJlcHVibGljYW47XG4gICAgfVxuICAgICYuZGVte1xuICAgICAgc3Ryb2tlOiRkZW1vY3JhdDtcbiAgICB9XG4gIH1cbiAgLmF4aXN7XG4gICAgcGF0aHtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG4gICAgdGV4dHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGZpbGw6Z3JleTtcbiAgICAgICYubGFiZWx7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKDAsMCk7XG4gICAgICB9XG4gICAgfVxuICAgICYueCBsaW5le1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbiAgICAmLnl7XG4gICAgICB0ZXh0e1xuICAgICAgICB0ZXh0LWFuY2hvcjpzdGFydDtcbiAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgwcHgsLTEwcHgpO1xuICAgICAgfVxuICAgICAgbGluZXtcbiAgICAgICAgc3Ryb2tlOiAkZ3JleS1taW5vcjtcbiAgICAgICAgc3Ryb2tlLWRhc2hhcnJheTogM3B4IDNweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjaXJjbGUudW5jb250ZXN0ZWRSe1xuICAgIGZpbGw6IHJnYmEoMjU1LDAsMCwuMSk7XG4gICAgc3Ryb2tlOnJnYmEoMjU1LDAsMCwuMik7XG4gICAgc3Ryb2tlLXdpZHRoOjFweDtcbiAgfVxuICBjaXJjbGUudW5jb250ZXN0ZWREe1xuICAgIGZpbGw6IHJnYmEoMCwwLDI1NSwuMSk7XG4gICAgc3Ryb2tlOnJnYmEoMCwwLDI1NSwuMik7XG4gICAgc3Ryb2tlLXdpZHRoOjFweDtcbiAgfVxuXG5cblxufVxuIl0sIm1hcHBpbmdzIjoiQUVBQSxBQUFBLE1BQU0sQUFBTixDQUVFLFFBQVEsQ0FBQyxRQUFTLENBQ2xCLFdBQVcsQ0QyQlksVUFBVSxDQUFFLFVBQVUsQ0FBRSxLQUFLLENBQUUsVUFBVSxDQzNCM0IsVUFBVSxDQTJHaEQsQUE5R0QsQUFLRSxNQUxJLENBS0osRUFBRSxBQUFBLENBQ0UsVUFBVSxDQUFFLENBQUUsQ0FDZCxTQUFTLENBQUUsSUFBSyxDQUNoQixhQUFhLENBQUUsS0FBTSxDQUN4QixBQVRILEFBV0csTUFYRyxDQVdKLENBQUMsQUFBQSxTQUFTLEFBQUEsQ0FDUixTQUFTLENBQUUsSUFBSyxDQUNoQixNQUFNLENBQUMsT0FBUSxDQUNmLEtBQUssQ0FBQyxJQUFLLENBZVosQUE3QkgsQUFlUSxNQWZGLENBV0osQ0FBQyxBQUFBLFNBQVMsQ0FJUixJQUFJLEFBQUEsVUFBVSxBQUFBLENBQ1osT0FBTyxDQUFDLFlBQWEsQ0FDckIsS0FBSyxDQUFDLElBQUssQ0FDWCxhQUFhLENBQUUsR0FBSSxDQUNuQixNQUFNLENBQUMsSUFBSyxDQUNaLE9BQU8sQ0FBRSxHQUFJLENBQ2IsYUFBYSxDQUFDLElBQUssQ0FPcEIsQUE1QkwsQUFlUSxNQWZGLENBV0osQ0FBQyxBQUFBLFNBQVMsQ0FJUixJQUFJLEFBQUEsVUFBVSxBQU9YLElBQUksQUFBQSxDQUNILGdCQUFnQixDREtYLE9BQU8sQ0NKYixBQXhCUCxBQWVRLE1BZkYsQ0FXSixDQUFDLEFBQUEsU0FBUyxDQUlSLElBQUksQUFBQSxVQUFVLEFBVVgsSUFBSSxBQUFBLENBQ0gsZ0JB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 */
